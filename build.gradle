buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://oss.sonatype.org/maven2"
        }
        jcenter()

    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.0'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'com.github.johnrengelman.shadow'


sourceCompatibility = 1.8



repositories {
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/maven2"
    }
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

apply from: "dependencies.gradle"

dependencies {

    compile libraries.vertx
    compile libraries.guava

    testCompile libraries.junit
    testCompile group: 'io.vertx', name: 'vertx-unit', version: vertxVersion


    testCompile group: 'io.vertx', name: 'vertx-core', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-rx-java', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-reactive-streams', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-metrics', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-service-factory', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-service-proxy', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-mongo-service', classifier: 'sources', version: vertxVersion
    testCompile group: 'io.vertx', name: 'vertx-mongo-embedded-db', classifier: 'sources', version: vertxVersion
}

shadowJar {
    classifier = 'fat'
    manifest {
        attributes 'Main-Class': 'io.vertx.core.Starter'
        attributes 'Main-Verticle': 'com.senacor.reactile.bootstrap.ApplicationStartup'
    }
    mergeServiceFiles {
        include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
    }
}

test {
    testLogging.showStandardStreams = true
}


task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

        }
    }
}